<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="mail">
 
  <!-- 메일 작성하기  -->
  <insert id="write">
  INSERT INTO MAIL 
	  	(
	  		NO
	  		,TITLE
	  		,CONTENT
	  		,WRITER
	  		,RECEIVER
	  	) 
	  	VALUES 
	  	(
	  		SEQ_MAIL_NO.NEXTVAL
	  		, #{title}
	  		, #{content}
	  		, #{writer}
	  		, #{receiver}
	  	)
  </insert>

  <!-- 첨부파일 추가하기  -->
  <insert id="insertAttachment">
  	INSERT ALL
			<foreach collection="list" item="x" separator=" ">
			    INTO M_ATT(NO,MNO, ORIGIN_NAME, CHANGE_NAME) VALUES ((SELECT GET_M_ATT_SEQ FROM DUAL) ,SEQ_MAIL_NO.CURRVAL , #{x.originName} , #{x.changeName})
			</foreach>
		SELECT 1 FROM DUAL
  </insert>
  
  <!-- 받은메일목록조회  -->
  <select id="getMailList" resultType="mailVo">
  	SELECT 
	    M.NO,
	    M.TITLE,
	    M.CONTENT,
	    M.WRITER,
	    M.RECEIVER,
	    M.ENROLL_DATE,
	    M.STATUS,
	    E.NAME AS writerName,
	    E2.NAME AS receiverName
	FROM 
	    MAIL M
	JOIN 
	    EMPLOYEE E ON (M.WRITER = E.NO)
	JOIN 
	    EMPLOYEE E2 ON (M.RECEIVER = E2.NO)
	WHERE 
	    M.RECEIVER = #{receiver}
	    AND M.STATUS = 'N'
	ORDER BY M.NO DESC

  </select>
  
  <!-- 받은 메일 목록 페이징  -->
  <select id="getCnt" resultType="int">
  	SELECT COUNT(*) 
   		FROM MAIL
   WHERE RECEIVER = #{receiver}
      AND STATUS = 'N'
  </select>
  
  <!-- 보낸 메일 목록 페이징  -->
  <select id="getSendMailListCnt" resultType="int">
  	SELECT COUNT(*) 
   		FROM MAIL
   WHERE WRITER = #{writer}
      AND STATUS = 'N'
  </select>
  
  <!-- 보낸 메일 목록 조회  -->
  <select id="getSendMailList" resultType="mailVo">
  	SELECT 
	    M.NO,
	    M.TITLE,
	    M.CONTENT,
	    M.WRITER,
	    M.RECEIVER,
	    M.ENROLL_DATE,
	    M.STATUS,
	    E.NAME AS writerName,
	    E2.NAME AS receiverName
	FROM 
	    MAIL M
	JOIN 
	    EMPLOYEE E ON (M.WRITER = E.NO)
	JOIN 
	    EMPLOYEE E2 ON (M.RECEIVER = E2.NO)
	WHERE 
	    M.WRITER = #{writer}
	    AND M.STATUS = 'N'
	ORDER BY M.NO DESC
  </select>
  
  <!-- 받은메일 상세보기  -->
  <select id="getInMailDetail" resultType="mailVo">
  	SELECT 
  		 M.NO 
		,M.TITLE
		,M.WRITER
		,M.RECEIVER
		,M.CONTENT
		,M.STATUS
		,M.ENROLL_DATE
		,E.NAME AS writerName
  	  FROM MAIL M, EMPLOYEE E
  		WHERE M.WRITER = E.NO
	    AND M.NO = #{num}
  	    AND M.STATUS = 'N'
  </select>
  
  <!-- 보낸메일 상세보기  -->
  <select id="getSendMailDetail" resultType="mailVo">
  	SELECT 
  		 M.NO 
		,M.TITLE
		,M.WRITER
		,M.RECEIVER
		,M.CONTENT
		,M.STATUS
		,M.ENROLL_DATE
		,E.NAME AS writerName
  	  FROM MAIL M, EMPLOYEE E
  		WHERE M.WRITER = E.NO
	    AND M.NO = #{no}
  	    AND M.STATUS = 'N'
  </select>
  
  <!-- 받은메일 첨부파일 다운  -->
  <select id="getAttachment" resultType="fileVo">
  	SELECT *
  		FROM M_ATT
  	WHERE NO = #{ano}
  	AND STATUS = 'N'
  </select>
  
  	<!-- 메일 선택 삭제 --> 
	<update id="chkDel">
	    UPDATE MAIL
	    SET
	    STATUS = 'Y'
     	WHERE 1=1
       	AND NO IN 
       		<foreach collection="list" index="index" item="groupList" open="(" close=")" separator=",">
            	#{groupList}
            </foreach>
	</update>
  
  <!-- 휴지통 페이징  -->
  <select id="getDelBoxListCnt" resultType="int">
  	SELECT COUNT (*)
  		FROM MAIL M
  	WHERE (M.RECEIVER = #{receiver} OR M.WRITER = #{writer}) 
  	AND STATUS = 'Y'
  		
  </select>
  
  <!-- 휴지통 목록조회  -->
  <select id="getDelBoxList" resultType="MailVo">
  SELECT 
	    M.NO,
	    M.TITLE,
	    M.CONTENT,
	    M.WRITER,
	    M.RECEIVER,
	    M.ENROLL_DATE,
	    M.STATUS,
	    E.NAME AS writerName,
	    E2.NAME AS receiverName
	FROM 
	    MAIL M
	JOIN 
	    EMPLOYEE E ON (M.WRITER = E.NO)
	JOIN 
	    EMPLOYEE E2 ON (M.RECEIVER = E2.NO)
	WHERE 
	     (M.RECEIVER = #{receiver} OR M.WRITER = #{writer})  
	    AND M.STATUS = 'Y'
	ORDER BY M.NO DESC
  </select>
  
  <!-- 메일 삭제  -->
  <update id="delete">
  	UPDATE MAIL
	    SET
          STATUS = 'Y'
	    WHERE NO = #{no}
  </update>
  
  <!-- 메일 첨부파일 목록조회   -->
  <select id="getAttList" resultType="fileVo">
  	SELECT 
		NO
		,MNO
		,ORIGIN_NAME
		,CHANGE_NAME
		,ENROLL_DATE
		,STATUS 
	FROM M_ATT
	WHERE MNO = #{num}
	AND STATUS = 'N'
  </select>
  
  <!-- 메일 영구 삭제 -->
  <update id="fDel">
  	UPDATE MAIL
	    SET
	    STATUS = 'D'
     	WHERE 1=1
       	AND NO IN 
       		<foreach collection="list" index="index" item="fDelList" open="(" close=")" separator=",">
            	#{fDelList}
            </foreach>
  </update>
	   
  
  <!-- 메일 복구 -->
  <update id="recover">
  	UPDATE MAIL
	    SET
	    STATUS = 'N'
     	WHERE 1=1
       	AND NO IN 
       		<foreach collection="list" index="index" item="recoverList" open="(" close=")" separator=",">
            	#{recoverList}
            </foreach>
  </update>
  
  
  </mapper>